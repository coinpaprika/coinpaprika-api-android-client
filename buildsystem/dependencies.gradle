allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
}

ext {
    // Android
    androidBuildToolsVersion = '29.0.2'
    androidMinSdkVersion = 16
    androidTargetSdkVersion = 29
    androidCompileSdkVersion = 29

    // Kotlin
    kotlinVersion = '1.3.41'

    // Reactive programming
    rxKotlinVersion = '2.4.0'
    rxJavaVersion = '2.2.13'
    rxAndroidVersion = '2.1.1'
    retrofitRxJavaAdapterVersion = '1.0.0'

    // Networking
    retrofitVersion = '2.6.2'
    retrofitConverterScalarsVersion = '2.6.2'
    gsonConverterVersion = '2.6.2'
    gsonVersion = '2.8.6'
    loggingInterceptorVersion = '4.2.2'

    // Testing
    jUnitVersion = '4.12'
    testCoreVersion = '1.2.0'
    testRunnerVersion = '1.2.0'
    espressoCoreVersion = '3.2.0'
    mockitoVersion = '3.1.0'

    apiDependencies = [
            // Kotlin
            kotlinJdk:              "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",

            // Reactive programming
            rxKotlin:               "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            rxJava:                 "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
            rxAndroid:              "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            retrofitRxJavaAdapter:  "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:${retrofitRxJavaAdapterVersion}",

            // Networking
            retrofit:               "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitScalars:        "com.squareup.retrofit2:converter-scalars:${retrofitConverterScalarsVersion}",
            gson:                   "com.google.code.gson:gson:${gsonVersion}",
            gsonConverter:          "com.squareup.retrofit2:converter-gson:${gsonConverterVersion}",
            loggingInterceptor:     "com.squareup.okhttp3:logging-interceptor:${loggingInterceptorVersion}",

            // Testing
            junit:                  "junit:junit:${jUnitVersion}",
            testCore:               "androidx.test:core:${testCoreVersion}",
            testRunner:             "androidx.test:runner:${testRunnerVersion}",
            espresso:               "androidx.test.espresso:espresso-core:${espressoCoreVersion}",
            mockito:                "org.mockito:mockito-core:${mockitoVersion}",
    ]
}